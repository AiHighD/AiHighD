<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DfQMUgjofwGcK3+DzQ9F1QAAAABJRU5ErkJggg==
</value>
  </data>
</root>